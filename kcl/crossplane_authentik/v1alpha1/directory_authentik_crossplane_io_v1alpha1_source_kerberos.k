"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SourceKerberos:
    r"""
    SourceKerberos is the Schema for the SourceKerbeross API. <no value>

    Attributes
    ----------
    apiVersion : str, default is "directory.authentik.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SourceKerberos", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpec, default is Undefined, required
        spec
    status : DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosStatus, default is Undefined, optional
        status
    """


    apiVersion: "directory.authentik.crossplane.io/v1alpha1" = "directory.authentik.crossplane.io/v1alpha1"

    kind: "SourceKerberos" = "SourceKerberos"

    metadata?: v1.ObjectMeta

    spec: DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpec

    status?: DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosStatus


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpec:
    r"""
    SourceKerberosSpec defines the desired state of SourceKerberos

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecForProvider, default is Undefined, required
        for provider
    initProvider : DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecForProvider

    initProvider?: DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecProviderConfigRef

    publishConnectionDetailsTo?: DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecWriteConnectionSecretToRef


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecForProvider:
    r"""
    directory authentik crossplane io v1alpha1 source kerberos spec for provider

    Attributes
    ----------
    authenticationFlow : str, default is Undefined, optional
        authentication flow
    enabled : bool, default is Undefined, optional
        Defaults to `true`.
    enrollmentFlow : str, default is Undefined, optional
        enrollment flow
    groupMatchingMode : str, default is Undefined, optional
        Allowed values:
        - `identifier`
        - `name_link`
        - `name_deny`
        Defaults to `identifier`.
    krb5Conf : str, default is Undefined, optional
        Custom krb5.conf to use. Uses the system one by default
    name : str, default is Undefined, optional
        name
    passwordLoginUpdateInternalPassword : bool, default is Undefined, optional
        If enabled, the authentik-stored password will be updated upon login with the Kerberos password backend Defaults to `false`.
    policyEngineMode : str, default is Undefined, optional
        Allowed values:
        - `all`
        - `any`
        Defaults to `any`.
    realm : str, default is Undefined, optional
        Kerberos realm
    spnegoCcache : str, default is Undefined, optional
        Credential cache to use for SPNEGO in form type:residual
    spnegoKeytabSecretRef : DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecForProviderSpnegoKeytabSecretRef, default is Undefined, optional
        spnego keytab secret ref
    spnegoServerName : str, default is Undefined, optional
        Force the use of a specific server name for SPNEGO
    syncCcache : str, default is Undefined, optional
        Credentials cache to authenticate to kadmin for sync. Must be in the form TYPE:residual
    syncKeytabSecretRef : DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecForProviderSyncKeytabSecretRef, default is Undefined, optional
        sync keytab secret ref
    syncPasswordSecretRef : DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecForProviderSyncPasswordSecretRef, default is Undefined, optional
        sync password secret ref
    syncPrincipal : str, default is Undefined, optional
        Principal to authenticate to kadmin for sync.
    syncUsers : bool, default is Undefined, optional
        Sync users from Kerberos into authentik Defaults to `true`.
    syncUsersPassword : bool, default is Undefined, optional
        When a user changes their password, sync it back to Kerberos Defaults to `true`.
    userMatchingMode : str, default is Undefined, optional
        Allowed values:
        - `identifier`
        - `email_link`
        - `email_deny`
        - `username_link`
        - `username_deny`
        Defaults to `identifier`.
    userPathTemplate : str, default is Undefined, optional
        Defaults to `goauthentik.io/sources/%(slug)s`.
    uuid : str, default is Undefined, optional
        Generated.
    """


    authenticationFlow?: str

    enabled?: bool

    enrollmentFlow?: str

    groupMatchingMode?: str

    krb5Conf?: str

    name?: str

    passwordLoginUpdateInternalPassword?: bool

    policyEngineMode?: str

    realm?: str

    spnegoCcache?: str

    spnegoKeytabSecretRef?: DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecForProviderSpnegoKeytabSecretRef

    spnegoServerName?: str

    syncCcache?: str

    syncKeytabSecretRef?: DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecForProviderSyncKeytabSecretRef

    syncPasswordSecretRef?: DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecForProviderSyncPasswordSecretRef

    syncPrincipal?: str

    syncUsers?: bool

    syncUsersPassword?: bool

    userMatchingMode?: str

    userPathTemplate?: str

    uuid?: str


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecForProviderSpnegoKeytabSecretRef:
    r"""
    SPNEGO keytab base64-encoded or path to keytab in the form FILE:path

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecForProviderSyncKeytabSecretRef:
    r"""
    Keytab to authenticate to kadmin for sync. Must be base64-encoded or in the form TYPE:residual

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecForProviderSyncPasswordSecretRef:
    r"""
    Password to authenticate to kadmin for sync

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    authenticationFlow : str, default is Undefined, optional
        authentication flow
    enabled : bool, default is Undefined, optional
        Defaults to `true`.
    enrollmentFlow : str, default is Undefined, optional
        enrollment flow
    groupMatchingMode : str, default is Undefined, optional
        Allowed values:
        - `identifier`
        - `name_link`
        - `name_deny`
        Defaults to `identifier`.
    krb5Conf : str, default is Undefined, optional
        Custom krb5.conf to use. Uses the system one by default
    name : str, default is Undefined, optional
        name
    passwordLoginUpdateInternalPassword : bool, default is Undefined, optional
        If enabled, the authentik-stored password will be updated upon login with the Kerberos password backend Defaults to `false`.
    policyEngineMode : str, default is Undefined, optional
        Allowed values:
        - `all`
        - `any`
        Defaults to `any`.
    realm : str, default is Undefined, optional
        Kerberos realm
    spnegoCcache : str, default is Undefined, optional
        Credential cache to use for SPNEGO in form type:residual
    spnegoKeytabSecretRef : DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecInitProviderSpnegoKeytabSecretRef, default is Undefined, optional
        spnego keytab secret ref
    spnegoServerName : str, default is Undefined, optional
        Force the use of a specific server name for SPNEGO
    syncCcache : str, default is Undefined, optional
        Credentials cache to authenticate to kadmin for sync. Must be in the form TYPE:residual
    syncKeytabSecretRef : DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecInitProviderSyncKeytabSecretRef, default is Undefined, optional
        sync keytab secret ref
    syncPasswordSecretRef : DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecInitProviderSyncPasswordSecretRef, default is Undefined, optional
        sync password secret ref
    syncPrincipal : str, default is Undefined, optional
        Principal to authenticate to kadmin for sync.
    syncUsers : bool, default is Undefined, optional
        Sync users from Kerberos into authentik Defaults to `true`.
    syncUsersPassword : bool, default is Undefined, optional
        When a user changes their password, sync it back to Kerberos Defaults to `true`.
    userMatchingMode : str, default is Undefined, optional
        Allowed values:
        - `identifier`
        - `email_link`
        - `email_deny`
        - `username_link`
        - `username_deny`
        Defaults to `identifier`.
    userPathTemplate : str, default is Undefined, optional
        Defaults to `goauthentik.io/sources/%(slug)s`.
    uuid : str, default is Undefined, optional
        Generated.
    """


    authenticationFlow?: str

    enabled?: bool

    enrollmentFlow?: str

    groupMatchingMode?: str

    krb5Conf?: str

    name?: str

    passwordLoginUpdateInternalPassword?: bool

    policyEngineMode?: str

    realm?: str

    spnegoCcache?: str

    spnegoKeytabSecretRef?: DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecInitProviderSpnegoKeytabSecretRef

    spnegoServerName?: str

    syncCcache?: str

    syncKeytabSecretRef?: DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecInitProviderSyncKeytabSecretRef

    syncPasswordSecretRef?: DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecInitProviderSyncPasswordSecretRef

    syncPrincipal?: str

    syncUsers?: bool

    syncUsersPassword?: bool

    userMatchingMode?: str

    userPathTemplate?: str

    uuid?: str


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecInitProviderSpnegoKeytabSecretRef:
    r"""
    SPNEGO keytab base64-encoded or path to keytab in the form FILE:path

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecInitProviderSyncKeytabSecretRef:
    r"""
    Keytab to authenticate to kadmin for sync. Must be base64-encoded or in the form TYPE:residual

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecInitProviderSyncPasswordSecretRef:
    r"""
    Password to authenticate to kadmin for sync

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecProviderConfigRefPolicy


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecPublishConnectionDetailsToConfigRef

    metadata?: DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecPublishConnectionDetailsToMetadata

    name: str


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecPublishConnectionDetailsToConfigRefPolicy


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosStatus:
    r"""
    SourceKerberosStatus defines the observed state of SourceKerberos.

    Attributes
    ----------
    atProvider : DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosStatusAtProvider

    conditions?: [DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosStatusConditionsItems0]

    observedGeneration?: int


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosStatusAtProvider:
    r"""
    directory authentik crossplane io v1alpha1 source kerberos status at provider

    Attributes
    ----------
    authenticationFlow : str, default is Undefined, optional
        authentication flow
    enabled : bool, default is Undefined, optional
        Defaults to `true`.
    enrollmentFlow : str, default is Undefined, optional
        enrollment flow
    groupMatchingMode : str, default is Undefined, optional
        Allowed values:
        - `identifier`
        - `name_link`
        - `name_deny`
        Defaults to `identifier`.
    id : str, default is Undefined, optional
        id
    krb5Conf : str, default is Undefined, optional
        Custom krb5.conf to use. Uses the system one by default
    name : str, default is Undefined, optional
        name
    passwordLoginUpdateInternalPassword : bool, default is Undefined, optional
        If enabled, the authentik-stored password will be updated upon login with the Kerberos password backend Defaults to `false`.
    policyEngineMode : str, default is Undefined, optional
        Allowed values:
        - `all`
        - `any`
        Defaults to `any`.
    realm : str, default is Undefined, optional
        Kerberos realm
    spnegoCcache : str, default is Undefined, optional
        Credential cache to use for SPNEGO in form type:residual
    spnegoServerName : str, default is Undefined, optional
        Force the use of a specific server name for SPNEGO
    syncCcache : str, default is Undefined, optional
        Credentials cache to authenticate to kadmin for sync. Must be in the form TYPE:residual
    syncPrincipal : str, default is Undefined, optional
        Principal to authenticate to kadmin for sync.
    syncUsers : bool, default is Undefined, optional
        Sync users from Kerberos into authentik Defaults to `true`.
    syncUsersPassword : bool, default is Undefined, optional
        When a user changes their password, sync it back to Kerberos Defaults to `true`.
    userMatchingMode : str, default is Undefined, optional
        Allowed values:
        - `identifier`
        - `email_link`
        - `email_deny`
        - `username_link`
        - `username_deny`
        Defaults to `identifier`.
    userPathTemplate : str, default is Undefined, optional
        Defaults to `goauthentik.io/sources/%(slug)s`.
    uuid : str, default is Undefined, optional
        Generated.
    """


    authenticationFlow?: str

    enabled?: bool

    enrollmentFlow?: str

    groupMatchingMode?: str

    id?: str

    krb5Conf?: str

    name?: str

    passwordLoginUpdateInternalPassword?: bool

    policyEngineMode?: str

    realm?: str

    spnegoCcache?: str

    spnegoServerName?: str

    syncCcache?: str

    syncPrincipal?: str

    syncUsers?: bool

    syncUsersPassword?: bool

    userMatchingMode?: str

    userPathTemplate?: str

    uuid?: str


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceKerberosStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


