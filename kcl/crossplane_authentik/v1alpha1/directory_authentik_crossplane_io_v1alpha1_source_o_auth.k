"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SourceOAuth:
    r"""
    SourceOAuth is the Schema for the SourceOAuths API.

    Attributes
    ----------
    apiVersion : str, default is "directory.authentik.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SourceOAuth", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpec, default is Undefined, required
        spec
    status : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthStatus, default is Undefined, optional
        status
    """


    apiVersion: "directory.authentik.crossplane.io/v1alpha1" = "directory.authentik.crossplane.io/v1alpha1"

    kind: "SourceOAuth" = "SourceOAuth"

    metadata?: v1.ObjectMeta

    spec: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpec

    status?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthStatus


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpec:
    r"""
    SourceOAuthSpec defines the desired state of SourceOAuth

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProvider, default is Undefined, required
        for provider
    initProvider : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProvider

    initProvider?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecProviderConfigRef

    publishConnectionDetailsTo?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecWriteConnectionSecretToRef


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProvider:
    r"""
    directory authentik crossplane io v1alpha1 source o auth spec for provider

    Attributes
    ----------
    accessTokenUrl : str, default is Undefined, optional
        (String) Only required for OAuth1.
        Only required for OAuth1.
    additionalScopes : str, default is Undefined, optional
        (String)
    authenticationFlow : str, default is Undefined, optional
        (String)
    authenticationFlowRef : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderAuthenticationFlowRef, default is Undefined, optional
        authentication flow ref
    authenticationFlowSelector : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderAuthenticationFlowSelector, default is Undefined, optional
        authentication flow selector
    authorizationUrl : str, default is Undefined, optional
        (String) Manually configure OAuth2 URLs when oidc_well_known_url is not set.
        Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.
    consumerKey : str, default is Undefined, optional
        (String)
    consumerSecretSecretRef : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderConsumerSecretSecretRef, default is Undefined, optional
        consumer secret secret ref
    enabled : bool, default is Undefined, optional
        (Boolean) Defaults to true.
        Defaults to `true`.
    enrollmentFlow : str, default is Undefined, optional
        (String)
    enrollmentFlowRef : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderEnrollmentFlowRef, default is Undefined, optional
        enrollment flow ref
    enrollmentFlowSelector : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderEnrollmentFlowSelector, default is Undefined, optional
        enrollment flow selector
    groupMatchingMode : str, default is Undefined, optional
        (String) Allowed values:
        Allowed values:
        - `identifier`
        - `name_link`
        - `name_deny`
        Defaults to `identifier`.
    name : str, default is Undefined, optional
        (String)
    oidcJwks : str, default is Undefined, optional
        to-machine authentication. JSON format expected. Use jsonencode() to pass objects. Generated.
        Manually configure JWKS keys for use with machine-to-machine authentication. JSON format expected. Use jsonencode() to pass objects. Generated.
    oidcJwksUrl : str, default is Undefined, optional
        (String) Automatically configure JWKS if not specified by oidc_well_known_url.
        Automatically configure JWKS if not specified by `oidc_well_known_url`.
    oidcWellKnownUrl : str, default is Undefined, optional
        known endpoint. URL is taken as is, and should end with .well-known/openid-configuration.
        Automatically configure source from OIDC well-known endpoint. URL is taken as is, and should end with `.well-known/openid-configuration`.
    policyEngineMode : str, default is Undefined, optional
        (String) Allowed values:
        Allowed values:
        - `all`
        - `any`
        Defaults to `any`.
    profileUrl : str, default is Undefined, optional
        (String) Manually configure OAuth2 URLs when oidc_well_known_url is not set.
        Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.
    providerType : str, default is Undefined, optional
        (String) Allowed values:
        Allowed values:
        - `apple`
        - `openidconnect`
        - `azuread`
        - `discord`
        - `facebook`
        - `github`
        - `gitlab`
        - `google`
        - `mailcow`
        - `okta`
        - `patreon`
        - `reddit`
        - `twitch`
        - `twitter`
    requestTokenUrl : str, default is Undefined, optional
        (String) Manually configure OAuth2 URLs when oidc_well_known_url is not set.
        Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.
    userMatchingMode : str, default is Undefined, optional
        (String) Allowed values:
        Allowed values:
        - `identifier`
        - `email_link`
        - `email_deny`
        - `username_link`
        - `username_deny`
        Defaults to `identifier`.
    userPathTemplate : str, default is Undefined, optional
        (String) Defaults to goauthentik.io/sources/%(slug)s.
        Defaults to `goauthentik.io/sources/%(slug)s`.
    uuid : str, default is Undefined, optional
        (String) Generated.
        Generated.
    """


    accessTokenUrl?: str

    additionalScopes?: str

    authenticationFlow?: str

    authenticationFlowRef?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderAuthenticationFlowRef

    authenticationFlowSelector?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderAuthenticationFlowSelector

    authorizationUrl?: str

    consumerKey?: str

    consumerSecretSecretRef?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderConsumerSecretSecretRef

    enabled?: bool

    enrollmentFlow?: str

    enrollmentFlowRef?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderEnrollmentFlowRef

    enrollmentFlowSelector?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderEnrollmentFlowSelector

    groupMatchingMode?: str

    name?: str

    oidcJwks?: str

    oidcJwksUrl?: str

    oidcWellKnownUrl?: str

    policyEngineMode?: str

    profileUrl?: str

    providerType?: str

    requestTokenUrl?: str

    userMatchingMode?: str

    userPathTemplate?: str

    uuid?: str


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderAuthenticationFlowRef:
    r"""
    Reference to a Flow in authentik to populate authenticationFlow.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderAuthenticationFlowRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderAuthenticationFlowRefPolicy


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderAuthenticationFlowRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderAuthenticationFlowSelector:
    r"""
    Selector for a Flow in authentik to populate authenticationFlow.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderAuthenticationFlowSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderAuthenticationFlowSelectorPolicy


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderAuthenticationFlowSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderConsumerSecretSecretRef:
    r"""
    (String, Sensitive)

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderEnrollmentFlowRef:
    r"""
    Reference to a Flow in authentik to populate enrollmentFlow.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderEnrollmentFlowRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderEnrollmentFlowRefPolicy


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderEnrollmentFlowRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderEnrollmentFlowSelector:
    r"""
    Selector for a Flow in authentik to populate enrollmentFlow.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderEnrollmentFlowSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderEnrollmentFlowSelectorPolicy


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecForProviderEnrollmentFlowSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    accessTokenUrl : str, default is Undefined, optional
        (String) Only required for OAuth1.
        Only required for OAuth1.
    additionalScopes : str, default is Undefined, optional
        (String)
    authenticationFlow : str, default is Undefined, optional
        (String)
    authenticationFlowRef : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderAuthenticationFlowRef, default is Undefined, optional
        authentication flow ref
    authenticationFlowSelector : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderAuthenticationFlowSelector, default is Undefined, optional
        authentication flow selector
    authorizationUrl : str, default is Undefined, optional
        (String) Manually configure OAuth2 URLs when oidc_well_known_url is not set.
        Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.
    consumerKey : str, default is Undefined, optional
        (String)
    consumerSecretSecretRef : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderConsumerSecretSecretRef, default is Undefined, required
        consumer secret secret ref
    enabled : bool, default is Undefined, optional
        (Boolean) Defaults to true.
        Defaults to `true`.
    enrollmentFlow : str, default is Undefined, optional
        (String)
    enrollmentFlowRef : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderEnrollmentFlowRef, default is Undefined, optional
        enrollment flow ref
    enrollmentFlowSelector : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderEnrollmentFlowSelector, default is Undefined, optional
        enrollment flow selector
    groupMatchingMode : str, default is Undefined, optional
        (String) Allowed values:
        Allowed values:
        - `identifier`
        - `name_link`
        - `name_deny`
        Defaults to `identifier`.
    name : str, default is Undefined, optional
        (String)
    oidcJwks : str, default is Undefined, optional
        to-machine authentication. JSON format expected. Use jsonencode() to pass objects. Generated.
        Manually configure JWKS keys for use with machine-to-machine authentication. JSON format expected. Use jsonencode() to pass objects. Generated.
    oidcJwksUrl : str, default is Undefined, optional
        (String) Automatically configure JWKS if not specified by oidc_well_known_url.
        Automatically configure JWKS if not specified by `oidc_well_known_url`.
    oidcWellKnownUrl : str, default is Undefined, optional
        known endpoint. URL is taken as is, and should end with .well-known/openid-configuration.
        Automatically configure source from OIDC well-known endpoint. URL is taken as is, and should end with `.well-known/openid-configuration`.
    policyEngineMode : str, default is Undefined, optional
        (String) Allowed values:
        Allowed values:
        - `all`
        - `any`
        Defaults to `any`.
    profileUrl : str, default is Undefined, optional
        (String) Manually configure OAuth2 URLs when oidc_well_known_url is not set.
        Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.
    providerType : str, default is Undefined, optional
        (String) Allowed values:
        Allowed values:
        - `apple`
        - `openidconnect`
        - `azuread`
        - `discord`
        - `facebook`
        - `github`
        - `gitlab`
        - `google`
        - `mailcow`
        - `okta`
        - `patreon`
        - `reddit`
        - `twitch`
        - `twitter`
    requestTokenUrl : str, default is Undefined, optional
        (String) Manually configure OAuth2 URLs when oidc_well_known_url is not set.
        Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.
    userMatchingMode : str, default is Undefined, optional
        (String) Allowed values:
        Allowed values:
        - `identifier`
        - `email_link`
        - `email_deny`
        - `username_link`
        - `username_deny`
        Defaults to `identifier`.
    userPathTemplate : str, default is Undefined, optional
        (String) Defaults to goauthentik.io/sources/%(slug)s.
        Defaults to `goauthentik.io/sources/%(slug)s`.
    uuid : str, default is Undefined, optional
        (String) Generated.
        Generated.
    """


    accessTokenUrl?: str

    additionalScopes?: str

    authenticationFlow?: str

    authenticationFlowRef?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderAuthenticationFlowRef

    authenticationFlowSelector?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderAuthenticationFlowSelector

    authorizationUrl?: str

    consumerKey?: str

    consumerSecretSecretRef: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderConsumerSecretSecretRef

    enabled?: bool

    enrollmentFlow?: str

    enrollmentFlowRef?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderEnrollmentFlowRef

    enrollmentFlowSelector?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderEnrollmentFlowSelector

    groupMatchingMode?: str

    name?: str

    oidcJwks?: str

    oidcJwksUrl?: str

    oidcWellKnownUrl?: str

    policyEngineMode?: str

    profileUrl?: str

    providerType?: str

    requestTokenUrl?: str

    userMatchingMode?: str

    userPathTemplate?: str

    uuid?: str


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderAuthenticationFlowRef:
    r"""
    Reference to a Flow in authentik to populate authenticationFlow.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderAuthenticationFlowRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderAuthenticationFlowRefPolicy


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderAuthenticationFlowRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderAuthenticationFlowSelector:
    r"""
    Selector for a Flow in authentik to populate authenticationFlow.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderAuthenticationFlowSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderAuthenticationFlowSelectorPolicy


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderAuthenticationFlowSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderConsumerSecretSecretRef:
    r"""
    (String, Sensitive)

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderEnrollmentFlowRef:
    r"""
    Reference to a Flow in authentik to populate enrollmentFlow.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderEnrollmentFlowRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderEnrollmentFlowRefPolicy


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderEnrollmentFlowRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderEnrollmentFlowSelector:
    r"""
    Selector for a Flow in authentik to populate enrollmentFlow.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderEnrollmentFlowSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderEnrollmentFlowSelectorPolicy


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecInitProviderEnrollmentFlowSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecProviderConfigRefPolicy


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecPublishConnectionDetailsToConfigRef

    metadata?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecPublishConnectionDetailsToMetadata

    name: str


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecPublishConnectionDetailsToConfigRefPolicy


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthStatus:
    r"""
    SourceOAuthStatus defines the observed state of SourceOAuth.

    Attributes
    ----------
    atProvider : DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthStatusAtProvider

    conditions?: [DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthStatusConditionsItems0]

    observedGeneration?: int


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthStatusAtProvider:
    r"""
    directory authentik crossplane io v1alpha1 source o auth status at provider

    Attributes
    ----------
    accessTokenUrl : str, default is Undefined, optional
        (String) Only required for OAuth1.
        Only required for OAuth1.
    additionalScopes : str, default is Undefined, optional
        (String)
    authenticationFlow : str, default is Undefined, optional
        (String)
    authorizationUrl : str, default is Undefined, optional
        (String) Manually configure OAuth2 URLs when oidc_well_known_url is not set.
        Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.
    callbackUri : str, default is Undefined, optional
        (String) Generated.
        Generated.
    consumerKey : str, default is Undefined, optional
        (String)
    enabled : bool, default is Undefined, optional
        (Boolean) Defaults to true.
        Defaults to `true`.
    enrollmentFlow : str, default is Undefined, optional
        (String)
    groupMatchingMode : str, default is Undefined, optional
        (String) Allowed values:
        Allowed values:
        - `identifier`
        - `name_link`
        - `name_deny`
        Defaults to `identifier`.
    id : str, default is Undefined, optional
        (String) The ID of this resource.
    name : str, default is Undefined, optional
        (String)
    oidcJwks : str, default is Undefined, optional
        to-machine authentication. JSON format expected. Use jsonencode() to pass objects. Generated.
        Manually configure JWKS keys for use with machine-to-machine authentication. JSON format expected. Use jsonencode() to pass objects. Generated.
    oidcJwksUrl : str, default is Undefined, optional
        (String) Automatically configure JWKS if not specified by oidc_well_known_url.
        Automatically configure JWKS if not specified by `oidc_well_known_url`.
    oidcWellKnownUrl : str, default is Undefined, optional
        known endpoint. URL is taken as is, and should end with .well-known/openid-configuration.
        Automatically configure source from OIDC well-known endpoint. URL is taken as is, and should end with `.well-known/openid-configuration`.
    policyEngineMode : str, default is Undefined, optional
        (String) Allowed values:
        Allowed values:
        - `all`
        - `any`
        Defaults to `any`.
    profileUrl : str, default is Undefined, optional
        (String) Manually configure OAuth2 URLs when oidc_well_known_url is not set.
        Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.
    providerType : str, default is Undefined, optional
        (String) Allowed values:
        Allowed values:
        - `apple`
        - `openidconnect`
        - `azuread`
        - `discord`
        - `facebook`
        - `github`
        - `gitlab`
        - `google`
        - `mailcow`
        - `okta`
        - `patreon`
        - `reddit`
        - `twitch`
        - `twitter`
    requestTokenUrl : str, default is Undefined, optional
        (String) Manually configure OAuth2 URLs when oidc_well_known_url is not set.
        Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.
    userMatchingMode : str, default is Undefined, optional
        (String) Allowed values:
        Allowed values:
        - `identifier`
        - `email_link`
        - `email_deny`
        - `username_link`
        - `username_deny`
        Defaults to `identifier`.
    userPathTemplate : str, default is Undefined, optional
        (String) Defaults to goauthentik.io/sources/%(slug)s.
        Defaults to `goauthentik.io/sources/%(slug)s`.
    uuid : str, default is Undefined, optional
        (String) Generated.
        Generated.
    """


    accessTokenUrl?: str

    additionalScopes?: str

    authenticationFlow?: str

    authorizationUrl?: str

    callbackUri?: str

    consumerKey?: str

    enabled?: bool

    enrollmentFlow?: str

    groupMatchingMode?: str

    id?: str

    name?: str

    oidcJwks?: str

    oidcJwksUrl?: str

    oidcWellKnownUrl?: str

    policyEngineMode?: str

    profileUrl?: str

    providerType?: str

    requestTokenUrl?: str

    userMatchingMode?: str

    userPathTemplate?: str

    uuid?: str


schema DirectoryAuthentikCrossplaneIoV1alpha1SourceOAuthStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


